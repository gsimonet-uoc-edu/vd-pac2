{"ownername":"simonetinho","key":36721,"name":"PAC2_OHL_Chart_GuillermoSimonetRamon","owner":18748,"theme":null,"parent":2040,"description":"Informació històrica sobre els preus de las acciones de l'empresa Apple i la seva fluctuació al llarg del temps del mes de gener de 2025.","basetype":["1"],"visualencoding":["1","3"],"category":["6"],"tags":["candlestick","waterfall","trend","stock","trade"],"likes":2,"searchable":true,"dimlen":5,"createdtime":"2025-03-23T21:45:14.000Z","modifiedtime":"2025-03-23T21:54:24.000Z","doc":{"name":"document","size":0,"type":"html","lines":1,"content":""},"style":{"name":"stylesheet","size":0,"type":"css","lines":1,"content":""},"code":{"name":"code","size":9483,"type":"javascript","lines":236,"content":"{\n  sample: function() {\n    var list = d3.range(15).map(function(d,i) { return [0,0,0,0]; });\n    for(i=1;i<list.length;i++) {\n      list[i][1] = list[i - 1][2] + (Math.random() * 2) - 1;\n      list[i][2] = list[i][1] + Math.random() * Math.sin(i/10) * 20 - 5;\n      list[i][0] = Math.min(list[i][1],list[i][2]) - Math.random() * 4;\n      list[i][3] = Math.max(list[i][1],list[i][2]) + Math.random() * 4;\n    }\n    return {\n      min: [{name: \"Min\", data: list.map(function(d,i) { return d[0]; })}],\n      start: [{name: \"Start\", data: list.map(function(d,i) { return d[1]; })}],\n      end: [{name: \"End\", data: list.map(function(d,i) { return d[2]; })}],\n      max: [{name: \"Max\", data: list.map(function(d,i) { return d[3]; })}],\n      order: [{name: \"Order\", data: list.map(function(d,i) { return i; })}]\n    };\n  },\n  dimension: {\n    min: { type: [plotdb.Number], require: false, desc: \"minimal value\" },\n    max: { type: [plotdb.Number], require: false, desc: \"maximal value\" },\n    start: { type: [plotdb.Number], require: false, desc: \"start value\" },\n    end: { type: [plotdb.Number], require: false, desc: \"start value\" },\n    order: { type: [plotdb.Order], require: false, desc: \"order of value set\"}\n  },\n  config: {\n    fontFamily: {},\n    background: {},\n    textFill: {},\n    fontSize: {},\n    margin: {},\n    padding: {},\n    colorPositive: {},\n    colorNeutral: {},\n    colorNegative: {},\n    strokeWidth: {},\n    yAxisShow: {},\n    yAxisLabel: {},\n    yAxisTickSizeInner: {},\n    yAxisTickSizeOuter: {},\n    yAxisTickPadding: {},\n    yAxisShowDomain: {default: true},\n    yAxisTickCount: {},\n    yAxisLabelPosition: {},\n    yAxisStroke: {},\n    xAxisShow: {},\n    xAxisLabel: {},\n    xAxisTickSizeInner: {},\n    xAxisTickSizeOuter: {},\n    xAxisTickPadding: {},\n    xAxisShowDomain: {default: true},\n    xAxisLabelPosition: {},\n    xAxisTickCount: {default: 0},\n    xAxisHandleOverlap: {},\n    xAxisTickDirection: {},\n    xAxisStroke: {},\n    popupShow: {}\n  },\n  init: function() {\n    var that = this;\n    this.svg = d3.select(this.root).append(\"svg\");\n    this.xAxisGroup = this.svg.append(\"g\").attr({class: \"axis horizontal\"});\n    this.yAxisGroup = this.svg.append(\"g\").attr({class: \"axis vertical\"});\n    this.popup = plotd3.html.tooltip(this.root).on(\"mousemove\", function(d,i,popup) {\n      popup.select(\".title\").text(d.order);\n      sel = popup.select(\".value\").selectAll(\"div\")\n        .data([\"min\",\"max\",\"start\",\"end\"].map(function(it) { return it+\": \" + Math.round(100*d[it])/100; }));\n      sel.exit().remove();\n      sel.enter().append(\"div\");\n      popup.selectAll(\".value div\").text(function(d,i) { return d; });\n    });\n    this.popup.coord(function(d,i) {\n      return [that.xScale(d.order) + that.barWidth/2, (that.yScale(d.min) + that.yScale(d.max) )/2, 1, 1];\n    });\n    this.popupNode = this.popup.getPopupNode();\n    this.popupNode.select(\".value\").each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"div\");\n      node.append(\"div\");\n      node.append(\"div\");\n      node.append(\"div\");      \n    });\n    this.orders = [];\n  },\n  parse: function() {\n    plotdb.Order.sort(this.data, \"order\");\n    this.orders = this.data.map(function(d,i) { return d.order; });\n    this.valueRange = d3.extent(this.data.map(function(it) {\n      if(it.start > it.end) {\n        it.minInner = it.end;\n        it.maxInner = it.start;\n      } else {\n        it.minInner = it.start;\n        it.maxInner = it.end;\n      }\n      return [it.min, it.max, it.start, it.end].filter(function(it) {\n        return typeof(it) != 'undefined' \n      });\n    }).reduce(function(a,b) { return a.concat(b); }, []));\n  },\n  bind: function() {\n    var that = this, sel;\n    sel = this.svg.selectAll(\"g.data\").data(this.data);\n    sel.exit().remove();\n    sel.enter().append(\"g\").attr({class: \"data\"}).each(function(d,i) {\n      var node = d3.select(this);\n      node.append(\"rect\").attr({class: \"data left\"});\n      node.append(\"rect\").attr({class: \"data right\"});\n      node.append(\"rect\").attr({class: \"data inner\"});\n      node.append(\"rect\").attr({class: \"background\"});\n    });\n    if(this.config.popupShow) this.popup.nodes(this.svg.selectAll(\"rect.background\"));\n  },\n  resize: function() {\n    var that = this, rate;\n    var box = this.root.getBoundingClientRect();\n    var width = this.width = box.width;\n    var height = this.height = box.height;\n    this.svg.attr({\n      width: width + \"px\", height: height + \"px\",\n      viewBox: [0,0,width,height].join(\" \"),\n      preserveAspectRatio: \"xMidYMid\"\n    });\n    this.popup.fontSize(this.config.fontSize);\n    this.padding = this.config.padding;\n    this.yScale = d3.scale.linear()\n      .domain(this.valueRange)\n      .range([this.height - this.config.margin, this.config.margin]);\n    this.yAxis = plotd3.rwd.axis()\n      .scale(this.yScale)\n      .orient(\"left\")\n      .labelPosition(this.config.yAxisLabelPosition)\n      .ticks(this.config.yAxisTickCount)\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\n      .tickPadding(this.config.xAxisTickPadding)\n      .fontSize(this.config.fontSize);\n    this.yAxis.label(this.config.yAxisLabel || \"\");\n    this.yAxisGroup.call(this.yAxis);\n    this.yAxisWidth = (this.config.yAxisShow ? this.yAxis.offset() : 0);\n    this.xScale = d3.scale.ordinal()\n      .domain(this.orders)\n      .rangeBands([this.config.margin + this.yAxisWidth, this.width - this.config.margin]);\n    this.barWidth = this.xScale.rangeBand();\n    if(this.barWidth - this.padding < 6) {\n      this.padding = this.barWidth - 6;\n      if(this.padding<0) this.padding = 1;\n    }\n    rate = this.padding / this.barWidth;\n    this.xScale.rangeBands([this.config.margin + this.yAxisWidth, this.width - this.config.margin],rate,rate);\n    this.barWidth = this.xScale.rangeBand();\n    this.xAxis = plotd3.rwd.axis()\n      .scale(this.xScale)\n      .orient(\"bottom\")\n      .fontSize(this.config.fontSize)\n      .labelPosition(this.config.xAxisLabelPosition)\n      .tickSize(this.config.xAxisTickSizeInner, this.config.xAxisTickSizeOuter)\n      .ticks(this.config.xAxisTickCount)\n      .tickPadding(this.config.xAxisTickPadding)\n      .tickDirection(this.config.xAxisTickDirection)\n      .handleOverlap(this.config.xAxisHandleOverlap)\n      .label(this.config.xAxisLabel || \"\")\n      .labelPosition(this.config.xAxisLabelPosition);\n    this.xAxis.label(this.config.xAxisLabel || \" \");\n    this.xAxisGroup.call(this.xAxis);\n    this.xAxisHeight = (this.config.xAxisShow ? this.xAxis.offset() : 0);\n    this.yScale.range([this.height - this.config.margin - this.xAxisHeight, this.config.margin]);\n    this.yAxisGroup.call(this.yAxis);\n  },\n  render: function() {\n    var that = this;\n    if(this.config.fontFamily) d3.select(this.root).style(\"font-family\", this.config.fontFamily);\n    d3.select(this.root).style(\"background-color\", this.config.background);\n    this.svg.selectAll(\"text\").attr({\n      \"font-size\": that.config.fontSize,\n      \"fill\": that.config.textFill\n    });\n    this.xAxisGroup.selectAll(\".domain\").attr({ display: (this.config.xAxisShowDomain ? \"block\" : \"none\")});\n    this.yAxisGroup.selectAll(\".domain\").attr({ display: (this.config.yAxisShowDomain ? \"block\" : \"none\")});\n    this.yAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.yAxisStroke });\n    this.xAxisGroup.selectAll(\"path,line\").attr({ stroke: that.config.xAxisStroke });\n    this.xAxisGroup.attr({\n      transform: [\"translate(\",0,this.height - this.xAxisHeight - this.config.margin ,\")\"].join(\" \"),\n      display: this.config.xAxisShow ? \"block\" : \"none\"\n    })\n    this.yAxisGroup.attr({\n      transform: [\"translate(\",this.yAxisWidth + this.config.margin, 0,\")\"].join(\" \"),\n      display: this.config.yAxisShow ? \"block\" : \"none\"\n    });\n    this.svg.selectAll(\"g.data\").each(function(d,i) {\n      var node = d3.select(this),sel;\n      sel = node;\n      if(sel.attr(\"transform\")) sel = node.transition().duration(500);\n      sel.attr({\n        transform: function(d,i) {\n          return [\"translate(\", that.xScale(d.order), 0, \")\"].join(\" \")\n        }\n      });      \n      var color = (d.end < d.start\n        ? that.config.colorNegative\n        : (d.end > d.start ? that.config.colorPositive : that.config.colorNeutral)\n      );\n      var dark = d3.rgb(color).darker().toString();\n      var textColor = d3.hsl(color).l > 0.65 ? \"#000\" : \"#fff\";\n      if(!node.select(\"rect.inner\").attr(\"fill\")) {\n        node.selectAll(\"rect\").attr({fill: color});\n      }\n      node.select(\"rect.inner\").transition().duration(500).attr({\n        x: that.barWidth/2, y: that.yScale(d.max),\n        width: that.config.strokeWidth,\n        height: that.yScale(d.min) - that.yScale(d.max) + 1,\n        fill: color\n      });\n      node.select(\"rect.left\").transition().duration(500).attr({\n        x: 0,\n        width: that.barWidth/2,\n        y: that.yScale(d.start) - that.config.strokeWidth/2,\n        height: that.config.strokeWidth,\n      }).style({\n        fill: color\n      });\n      node.select(\"rect.right\").transition().duration(500).attr({\n        x: that.barWidth/2,\n        width: that.barWidth/2,\n        y: that.yScale(d.end) - that.config.strokeWidth/2,\n        height: that.config.strokeWidth,\n      }).style({\n        fill: color\n      });\n      node.select(\"rect.background\").attr({\n        x: 0, width: that.barWidth,\n        y: 0, height: that.yScale.range()[0] - that.yScale.range()[1],\n        fill: \"#fff\",\n        opacity: 0.01\n      });\n    });\n  }\n}"},"permission":{"list":[],"switch":"publish"},"assets":[],"dimension":{"min":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":false,"desc":"minimal value","fields":[{"dataset":37407,"location":"server","name":"Low","datatype":"Number","data":["241.55442975303322","241.624340886356","242.93290033169586","241.08494412707995","239.78635773622742","232.74409661721964","229.46771001708314","232.21468051006943","234.17252500331003","227.7795647267042","228.22906438809179","219.13906319002535","219.54859611049605","222.05586069453574","221.16683361690275","223.73399710835045","230.55650666713984","233.75299176206667","236.94948349745044"],"key":215690,"datasetname":"PAC2_OHL_Chart_GuillermoSimonetRamon (Dataset)","hash":null,"bind":"min"}],"fieldName":["Low"]},"max":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":false,"desc":"maximal value","fields":[{"dataset":37407,"location":"server","name":"High","datatype":"Number","data":["248.826433311358","243.91181916074598","247.05836939894766","245.28032844029428","243.44234164075266","239.8962364632009","234.41227060505477","235.8606656353981","238.6975638581554","237.74859991927732","232.03487756376998","224.17352112887505","223.87384226456615","226.78066167492807","225.38220009721186","231.89502211760887","239.9262098046868","239.5965730646729","240.52553823889048"],"key":215689,"datasetname":"PAC2_OHL_Chart_GuillermoSimonetRamon (Dataset)","hash":null,"bind":"max"}],"fieldName":["High"]},"start":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":false,"desc":"start value","fields":[{"dataset":37407,"location":"server","name":"Open","datatype":"Number","data":["248.65660659999048","243.0927276611328","244.04168187374515","242.71314361950866","241.65429905026372","239.7463920626497","233.27352322575203","234.49217517741417","234.38230107288462","237.089336348529","231.86506609768284","223.75398423747347","219.54859611049605","224.493183388126","224.53312753788666","223.77396171163917","230.59647127201654","233.86287156365174","238.40787147181928"],"key":215691,"datasetname":"PAC2_OHL_Chart_GuillermoSimonetRamon (Dataset)","hash":null,"bind":"start"}],"fieldName":["Open"]},"end":{"type":[{"name":"Number","default":0,"level":8,"basetype":[{"name":"Numstring","default":"","level":6,"basetype":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"order":{}}],"order":{}}],"require":false,"desc":"start value","fields":[{"dataset":37407,"location":"server","name":"Close","datatype":"Number","data":["243.5821990966797","243.0927276611328","244.73092651367188","241.94400024414062","242.43344116210938","236.58987426757812","234.14256286621094","233.02378845214844","237.60874938964844","228.00930786132812","229.7274169921875","222.39547729492188","223.58416748046875","223.41436767578125","222.5353240966797","229.6075439453125","237.99832153320312","239.0971221923828","237.3290557861328"],"key":215688,"datasetname":"PAC2_OHL_Chart_GuillermoSimonetRamon (Dataset)","hash":null,"bind":"end"}],"fieldName":["Close"]},"order":{"type":[{"name":"Order","level":4,"basetype":[{"name":"String","default":"","level":2,"basetype":[]}],"order":{}}],"require":false,"desc":"order of value set","fields":[{"dataset":37407,"location":"server","name":"Date","datatype":"Date","data":["2025-01-02","2025-01-03","2025-01-06","2025-01-07","2025-01-08","2025-01-10","2025-01-13","2025-01-14","2025-01-15","2025-01-16","2025-01-17","2025-01-21","2025-01-22","2025-01-23","2025-01-24","2025-01-27","2025-01-28","2025-01-29","2025-01-30"],"key":215687,"datasetname":"PAC2_OHL_Chart_GuillermoSimonetRamon (Dataset)","hash":null,"bind":"order"}],"fieldName":["Date"]}},"config":{"margin":{"max":20,"min":0,"name":"Margin","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":10,"default":10,"category":"Global Settings"},"padding":{"name":"Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":10,"default":10,"category":"Global Settings"},"fontSize":{"name":"Font Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":13,"default":13,"category":"Global Settings"},"textFill":{"name":"Text Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000000","category":"Global Settings"},"popupShow":{"desc":"show Popup when user hovers over elements","name":"show Popup","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Popup","rebindOnChange":true},"xAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"X Axis"},"yAxisShow":{"name":"Show Axis","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Y Axis"},"background":{"name":"Background","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#ffffff","default":"#ffffff","category":"Global Settings"},"fontFamily":{"name":"Font","type":[{"name":"EditableChoice","level":20,"values":["Arial","Helvetica","Tahoma","Consolas","Century Gothic","Courier New"],"default":""}],"value":"Arial","default":"Arial","category":"Global Settings"},"xAxisLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Primer mes Apple","default":"","category":"X Axis"},"yAxisLabel":{"name":"Label","type":[{"name":"String","level":2,"default":"","basetype":[]}],"value":"Escala de preus en €","default":"","category":"Y Axis"},"strokeWidth":{"desc":"Default Stroke width","name":"Stroke Width","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":"2","category":"Global Settings"},"xAxisStroke":{"name":"Stroke Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000","category":"X Axis"},"yAxisStroke":{"name":"Stroke Color","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#000000","default":"#000","category":"Y Axis"},"colorNeutral":{"desc":"Color for neutral values","name":"Neutral","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#cccccc","default":"#cccccc","category":"Global Settings"},"colorNegative":{"desc":"Color for negative values","name":"Negative","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#d93510","default":"#d93510","category":"Global Settings"},"colorPositive":{"desc":"Color for positive values","name":"Positive","type":[{"Gray":"#cccccc","name":"Color","Empty":"#ffffff","level":10,"Neutral":"#cccccc","default":"#dc4521","subtype":{"neutral":"neutral","negative":"negative","positive":"positive"},"Negative":"#d93510","Positive":"#3f7ab5"}],"value":"#3f7ab5","default":"#3f7ab5","category":"Global Settings"},"xAxisTickCount":{"desc":"Hint on number of tick. Actual number will be decided by program","name":"Tick Count","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"X Axis"},"yAxisTickCount":{"desc":"Hint on number of tick. Actual number will be decided by program","name":"Tick Count","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":6,"default":6,"category":"Y Axis"},"xAxisShowDomain":{"name":"Show Basline","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"X Axis"},"yAxisShowDomain":{"name":"Show Basline","type":[{"name":"Boolean","level":8,"order":{},"default":true,"basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}],"value":true,"default":true,"category":"Y Axis"},"xAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"yAxisTickPadding":{"name":"Tick Padding","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"Y Axis"},"xAxisHandleOverlap":{"desc":"How should overlapped ticks be taken care?","name":"Overlap Ticks","type":[{"name":"Choice","level":20,"values":["none","hidden","offset"],"default":""}],"value":"offset","default":"hidden","category":"X Axis"},"xAxisLabelPosition":{"name":"Label Position","type":[{"name":"Choice","level":20,"values":["in","center"],"default":""}],"value":"center","default":"center","category":"X Axis"},"xAxisTickDirection":{"name":"Tick Direction","type":[{"name":"Choice","level":20,"values":["vertical","horizontal"],"default":""}],"value":"horizontal","default":"horizontal","category":"X Axis"},"xAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"X Axis"},"xAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"X Axis"},"yAxisLabelPosition":{"name":"Label Position","type":[{"name":"Choice","level":20,"values":["in","center"],"default":""}],"value":"center","default":"center","category":"Y Axis"},"yAxisTickSizeInner":{"name":"Inner Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":4,"default":4,"category":"Y Axis"},"yAxisTickSizeOuter":{"name":"Outer Tick Size","type":[{"name":"Number","level":8,"order":{},"default":0,"basetype":[{"name":"Numstring","level":6,"order":{},"default":"","basetype":[{"name":"Order","level":4,"order":{},"basetype":[{"name":"String","level":2,"default":"","basetype":[]}]}]}]}],"value":0,"default":0,"category":"Y Axis"}},"library":["d3/3.5.12/min","plotd3/0.1.0"],"local":{},"inherit":[],"metashow":null,"footer":"https://finance.yahoo.com/quote/AAPL/history/"}